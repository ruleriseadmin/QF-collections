services:
  collection_app:
    image: ghcr.io/ruleriseadmin/collection-service-backend:main
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "./.env:/var/www/html/collection_app/.env"
    networks:
      - collection_sail
    depends_on:
      - collection_database
      - collection_redis
  collection_database:
    image: "mysql/mysql-server:8.0"
    restart: always
    ports:
      - "${FORWARD_DB_PORT:-3307}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - "collection-sail-mysql:/var/lib/mysql"
    networks:
      - collection_sail
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - "-p${DB_PASSWORD}"
      retries: 3
      timeout: 5s
  collection_redis:
    image: "redis:alpine"
    restart: always
    ports:
      - "${FORWARD_REDIS_PORT:-6380}:6379"
    volumes:
      - "collection-sail-redis:/data"
    networks:
      - collection_sail
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s
    command: redis-server --appendonly yes --replica-read-only no
  phpmyadmin:
    image: phpmyadmin:apache
    restart: always
    ports:
      - 5001:80
    depends_on:
      - collection_database
    environment:
      PMA_HOST: collection_database
    networks:
      - collection_sail
  collection_nginx:
    image: nginx:1.25.1-alpine
    restart: always
    ports:
      - 90:80
      - 444:443
    volumes:
      # - /data/certbot/www/:/var/www/certbot/
      # - /data/certbot/letsencrypt/:/etc/letsencrypt/
      - ./server/default-production.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - collection_app

    networks:
      - collection_sail
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  # certbot:
  #   image: certbot/certbot:v2.6.0
  #   restart: unless-stopped
  #   volumes:
  #     - /data/certbot/www/:/var/www/certbot/
  #     - /data/certbot/letsencrypt/:/etc/letsencrypt/
  #   networks:
  #     - collection_sail
  #   depends_on:
  #     - collection_nginx
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
networks:
  collection_sail:
    driver: bridge
volumes:
  collection-sail-mysql:
    driver: local
  collection-sail-redis:
    driver: local
